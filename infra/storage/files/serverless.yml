service: mediabox-storage-filemeta

custom:
  stage: ${opt:stage, self:provider.stage}
  # Set the table name here so we can use it while testing locally
  filesTable: ${self:custom.stage}-files
  bucketName: ${self:provider.stage}-mediabox-files
  backupEnabled:
    dev: false
    stage: false
    prod: true

provider:
  name: aws
  stage: dev
  region: ${opt:region,'us-east-1'}
  profile: ${opt:profile, 'prodhta'}

resources:
  Resources:
    #File Table Config
    FilesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        # Generate a name based on the stage
        TableName: ${self:custom.filesTable}
        PointInTimeRecoverySpecification:
          PointInTimeRecoveryEnabled: ${self:custom.backupEnabled.${opt:stage, self:provider.stage}}
        AttributeDefinitions:
          - AttributeName: userId
            AttributeType: S
          - AttributeName: createdAt
            AttributeType: S
          - AttributeName: fileId
            AttributeType: S
          - AttributeName: transcriptionId
            AttributeType: S
        KeySchema:
          - AttributeName: userId
            KeyType: HASH
          - AttributeName: createdAt
            KeyType: RANGE
        GlobalSecondaryIndexes:
          - IndexName: "fileIdIndex"
            KeySchema:
              - AttributeName: fileId
                KeyType: HASH
            Projection:
              ProjectionType: ALL
          - IndexName: "transcriptionIdIndex"
            KeySchema:
              - AttributeName: transcriptionId
                KeyType: HASH
            Projection:
              ProjectionType: ALL
        BillingMode: PAY_PER_REQUEST
    FilesBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.bucketName}
        AccessControl: PublicRead
        PublicAccessBlockConfiguration:
          BlockPublicAcls: false
          BlockPublicPolicy: false
          IgnorePublicAcls: false
          RestrictPublicBuckets: false
        CorsConfiguration:
          CorsRules:
            - AllowedHeaders:
                - "Authorization"
              AllowedMethods:
                - GET
              AllowedOrigins:
                - "*"
            - AllowedHeaders:
                - "*"
              AllowedMethods:
                - PUT
              AllowedOrigins:
                - "*"
  Outputs:
    FilesTableArn:
      Value:
        Fn::GetAtt:
          - FilesTable
          - Arn
      Export:
        Name: ${self:custom.stage}-FilesTableArn
